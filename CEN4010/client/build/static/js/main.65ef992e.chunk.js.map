{"version":3,"sources":["SearchArea.js","Header.js","List.js","utils/API.js","BookList.js","HomePage.js","components/profilemanagement/CreateAccountForm.js","components/profilemanagement/EditNickname.js","components/profilemanagement/EditPersonalInfo.js","components/profilemanagement/ShippingAddressList.js","components/profilemanagement/EditShippingAddresses.js","components/profilemanagement/CreditCardsList.js","components/profilemanagement/EditCreditCards.js","components/profilemanagement/EditProfileComponent.js","components/profilemanagement/LoginForm.js","utils/AuthService.js","components/NavibarComponent.js","components/PrivateRoute.js","Profile.js","components/ShopCartPagination.js","ShoppingCart.js","Tab.js","components/WishList.js","fontawesome.js","components/StarRatingComponent.js","components/CommentComponent.js","components/CommentListComponent.js","components/CommentFormComponent.js","Reviews.js","App.js","serviceWorker.js","index.js"],"names":["SearchArea","props","state","books","searchTerm","handleSearch","bind","searchButtonClicked","document","getElementById","addEventListener","event","keyCode","click","this","setState","target","value","e","alert","preventDefault","InputGroup","style","display","alignItems","FormControl","id","borderRadius","placeholder","aria-label","aria-describedby","onChange","onFocus","setTextBoxListner","Append","paddingLeft","Link","component","RouterLink","to","onClick","Button","color","Component","Header","handleClick","anchorEl","currentTarget","handleClose","handleLogout","logoutCurrentUser","currentUser","isUserLoggedIn","nextProps","nextState","username","className","textDecoration","align","loggedInUser","logoutUser","Dropdown","disabled","textTransform","aria-owns","undefined","aria-haspopup","Toggle","split","Menu","alignRight","Item","BookListContainer","styled","div","CoverContainer","DetailContainer","Line","hr","List","book","src","bookInfo","cover","alt","modalDiv","modalImage","caption","innerHTML","title","showModal","ListItem","pathname","underline","author","genre","publisher","pub_date","price","data","axios","post","token","localStorage","getItem","headers","type","ListContainer","NoResultsContainer","BookList","onChangePage","page","console","log","Math","ceil","length","onPage","allBooks","fi","order","pageSize","activePage","itemsCountPerPage","pageRangeDisplayed","totalItemsCount","sort","retriveResults","returnList","showNoResults","changeState","ASC","DESC","handlePageChange","match","params","term","size","pageNumber","get","then","response","API","res","catch","err","linq","from","where","x","JSON","stringify","includes","toArray","map","index","key","bookIndex","class","defaultValue","HomePage","font-family","CreateAccountForm","useState","error","setError","email","setEmail","firstName","setFirstName","lastName","setLastName","password","setPassword","submitHandle","status","AccountCreationError","Fragment","Container","paddingTop","Alert","dismissable","variant","onClose","Form","onSubmit","Group","controlId","Label","Control","EditNickname","userEmail","nickname","userNickname","setUserNickname","nicknameUpdate","primaryKeys","updates","$set","onNicknameUpdate","htmlFor","EditALL","setUserEmail","officialUserEmail","setOfficialUserEmail","userFirstName","setUserFirstName","userLastName","setUserLastName","homeAddress","userHomeAddress","setUserHomeAddress","alphaCheck","test","newUserEmailUpdate","newPersonalInfo","onNewPersonalInfo","onKeyPress","ShippingAddressList","trueAddresses","setTrueAddresses","addresses","setAddresses","newAddress","setNewAddress","formCheck","setFormCheck","updateTrueAddresses","useEffect","Card","address","ListGroup","newAddresses","updateAddress","ButtonGroup","shippingAddressUpdate","editHandle","deleteHandle","EditShippingAddresses","Body","CreditCardsList","trueCreditCards","setTrueCreditCards","creditCards","setCreditCards","creditCardNumber","setCreditCardNumber","CVV","setCVV","expirationMonth","setExpirationMonth","expirationYear","setExpirationYear","updateTrueCreditCards","months","checkLength","inString","inChar","charCodeAt","slice","maxLength","creditCard","onInput","creditCardNum","ccn","newCreditCard","newCreditCards","editCreditCardCCNHandle","Row","as","Col","md","month","editCreditCardExpMonthHandle","year","editCreditCardExpYearHandle","width","cvv","editCreditCardCVVHandle","creditCardUpdate","EditCreditCards","EditProfileComponent","setNickname","setHomeAddress","renderChildren","setRenderChildren","newNickname","EditPersonalInfo","newFirstName","newLastName","newEmail","newHomeAddress","Spinner","animation","LoginForm","loginFailed","setLoginFailed","redirect","setRedirect","loginHandle","credentials","setItem","handleAuth","loginResponseHandle","loginErrorHandle","inline","isAuthenticated","isTokenExpired","decode","header","exp","Date","now","getProfile","NavibarComponent","AuthService","authenticated","setAuthenticated","Navbar","bg","expand","Divider","removeItem","PrivateRoute","rest","render","location","Profile","path","Auth","ShopCartPagination","ShoppingCart","name","description","bookID","currentID","qty","accumulated","dbString","subtotal","dbDataString","saveDataString","begin","qtyMore10","qty_handleChange","qty_handleSubmit","saveLater_handleSubmit","returnShopCart_handleSubmit","removeShopCart_ButtonHandle","removesSaveLater_ButtonHandle","removeSaveLater_ButtonHandle","saveTempString","dbTempString","dbData","saveData","parse","JSONstring","CartOrSave","object","temp","isMore","qty_more10Confirm","obj","itemIndex","jsonString","Array","selectedOptions","item","text","isNum","qtyVar","prompt","qtyString","substring","saveLater","addToDB","removeFromDB","cartData","objSrc","destination","destinationID","beginPosDest","search","endPosDest","tempString","everyOtherItems","itemToBeAdded","objID","i","check","dbInfoJSON","currentQty","Media","height","bookImageURL","bookName","bookDescription","custom","itemBalance","bookPrice","arrayLength","rows","push","itemCreator","totalDisplay","saveItemCreator","num","total","accum","ShopCartList","SaveLaterList","Tab","label","activeTab","WishList","dropdownOpen","setDropdownOpen","buttonLabel","modal","setModal","unmountOnClose","toggle","marginBottom","FormGroup","Input","isOpen","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","href","Modal","ModalHeader","ModalBody","ModalFooter","UncontrolledCollapse","toggler","flush","marginRight","ListGroupItem","tag","Badge","pill","marginLeft","marginTop","library","add","faStar","StarRatingComponent","inputValue","editing","stopPropagation","onStarClick","onStarHover","onStarHoverOut","starCount","starColor","emptyStarColor","starStyles","float","cursor","radioStyles","position","starNodes","starNodeInput","checked","starNodeLabel","onMouseOver","onMouseLeave","renderIcon","renderStarIcon","renderStarIconHalf","icon","classes","cx","renderStars","defaultProps","Comment","comment","message","time","CommentList","comments","loading","CommentForm","handleFieldChange","goAnonymous","isFormValid","fetch","method","body","json","addComment","renderError","border","App","setComments","setLoading","Wishlist","Reviews","Boolean","window","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65ef992e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport { Link } from '@material-ui/core';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport default class SearchArea extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            books: [],  //Contains all the book returned by the search\r\n            searchTerm: ''\r\n        };\r\n\r\n        //Bind the methods to the component\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.searchButtonClicked = this.searchButtonClicked.bind(this);\r\n    }\r\n    \r\n\r\n    setTextBoxListner()\r\n    {\r\n        var input = document.getElementById(\"searchText\");\r\n        \r\n        input.addEventListener(\"keyup\", function (event) {\r\n            if (event.keyCode === 13) {\r\n                \r\n                document.getElementById(\"linkToList\").click();\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.setState({\r\n            searchTerm: event.target.value\r\n        });\r\n    }\r\n\r\n    searchButtonClicked(e) {\r\n        if (this.state.searchTerm === \"\")\r\n        {\r\n            alert(\"Please enter a search term in the textbox\");\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <InputGroup style={{display: 'flex', alignItems: 'center'}}>\r\n                <FormControl\r\n                    id=\"searchText\"\r\n                    style={{borderRadius: '1.2rem'}}\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={this.handleSearch}\r\n                    onFocus={this.setTextBoxListner}\r\n                    />\r\n                <InputGroup.Append style={{paddingLeft: '3%'}}>\r\n                <Link id=\"linkToList\" \r\n                    component={RouterLink} \r\n                    to={\"/bookList/\" + this.state.searchTerm}\r\n                    onClick={this.searchButtonClicked}\r\n                    ><Button style={{color: 'white'}}>\r\n                    </Button>\r\n                </Link>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { NavLink, HashRouter } from \"react-router-dom\";\r\nimport SearchArea from \"./SearchArea\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            currentUser: props.currentUser,\r\n            isUserLoggedIn: props.isUserLoggedIn\r\n        }\r\n\r\n        this.logoutCurrentUser = this.logoutCurrentUser.bind(this);\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if (nextProps !== this.props) {\r\n            this.setState({\r\n                currentUser: nextProps.username, \r\n                isUserLoggedIn: nextProps.isUserLoggedIn\r\n            })\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <HashRouter>\r\n            <div className=\"topnav\">\r\n                <div className=\"logo\">\r\n                <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                    to=\"/HomePage\">\r\n                    <h1 align = \"left\">Geek Text</h1>\r\n                    </NavLink>\r\n                </div>\r\n                <div id=\"search-info-container\" className=\"search\">\r\n                <SearchArea></SearchArea>\r\n                </div>\r\n                <div className=\"rightIcons\">\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"loginButton\">\r\n                        {this.loggedInUser()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogout = () => {\r\n        this.logoutCurrentUser();\r\n        alert(\"You have been logged out\");\r\n        \r\n    };\r\n\r\n    logoutCurrentUser() {\r\n        this.props.logoutUser(\"null\", false);\r\n    }\r\n\r\n    loggedInUser () {\r\n\r\n        const { anchorEl } = this.state;\r\n\r\n        if (this.state.isUserLoggedIn) {\r\n            return (\r\n                <HashRouter>\r\n                    <div>\r\n                        <Dropdown>\r\n                            <Button\r\n                            disabled\r\n                            style={{textDecoration: 'none', color: 'black', textTransform: 'none'}}\r\n                            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick}>\r\n                            {this.props.currentUser}\r\n                            </Button>\r\n                            <Dropdown.Toggle split className=\"menuToggle\"></Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu alignRight>\r\n                                <Dropdown.Item>\r\n                                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                        to=\"/profilesettings\"\r\n                                        >Your Account</NavLink>\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item>\r\n                                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                        to=\"/loginSettings\"\r\n                                        >Your Login Settings</NavLink>\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item>\r\n                                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                        to=\"/addressSettings\"\r\n                                        >Your Addresses</NavLink>\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item>\r\n                                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                    to=\"/paymentSettings\"\r\n                                    >Your Payment Methods</NavLink>\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item>\r\n                                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                        to=\"/\"\r\n                                        onClick={this.handleLogout}\r\n                                        >Sign Out</NavLink>\r\n                                </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                            </Dropdown>\r\n                    </div>\r\n                </HashRouter>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                to=\"/Profile\"\r\n                                >Login / Register </NavLink>\r\n                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                to=\"/ShoppingCart\"\r\n                                >Shopping Cart </NavLink>\r\n                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                to=\"/BookDetails\"\r\n                                >Book Details </NavLink>\r\n                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                to=\"/Wishlist\"\r\n                                >Wishlist </NavLink>\r\n                    <NavLink style={{ textDecoration: 'none',  color: 'black'}} \r\n                                to=\"/Reviews\"\r\n                                >Reviews </NavLink>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Link, ListItem } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport {List as ListExt} from \"@material-ui/core\";\r\n\r\nconst BookListContainer = styled.div`\r\n    width: 100%;\r\n    text-align: -webkit-center;\r\n`;\r\n\r\nconst CoverContainer = styled.div`\r\n    padding-left: 10px;\r\n    float: left;\r\n`;\r\n\r\nconst DetailContainer = styled.div`\r\n    padding-left: 275px;\r\n    text-align: center;\r\n`;\r\n\r\nconst Line = styled.hr`\r\n    display: -ms-grid;\r\n    unicode-bidi: isolate;\r\n    margin-block-start: 0.5em;\r\n    margin-block-end: 0.5em;\r\n    margin-inline-start: auto;\r\n    margin-inline-end: auto;\r\n`;\r\n\r\nconst List = (book) => {\r\n    \r\n    return ( <div>\r\n                <BookListContainer>\r\n                    <CoverContainer>\r\n                        <img id=\"cover\" \r\n                                src={book.bookInfo.cover} \r\n                                alt=\"Image not available\" \r\n                                onClick={ function () {showModal(book)}}>\r\n                        </img>\r\n                    </CoverContainer>\r\n                    <DetailContainer>\r\n                        <ListExt>\r\n                            <ListItem>Title: <Link \r\n                                component={RouterLink} \r\n                                to={{pathname: \"/bookDetails\", state: {book: book}}} \r\n                                style={{color: \"MediumBlue\"}}\r\n                                underline=\"always\">\r\n                                {book.bookInfo.title}\r\n                            </Link></ListItem>\r\n                            <ListItem>Author: <Link \r\n                                component={RouterLink} \r\n                                to={\"/authorPage/\" + book.bookInfo.author}\r\n                                style={{color: \"MediumBlue\"}}\r\n                                underline=\"always\">\r\n                                {book.bookInfo.author}\r\n                            </Link></ListItem>\r\n                            <ListItem>Genre: {book.bookInfo.genre}</ListItem>\r\n                            <ListItem>Publisher: {book.bookInfo.publisher}</ListItem>\r\n                            <ListItem>Publish Date: {book.bookInfo.pub_date}</ListItem>\r\n                            <ListItem>Price: ${book.bookInfo.price}</ListItem>\r\n                        </ListExt>\r\n                    </DetailContainer>\r\n                    <Line></Line>\r\n                </BookListContainer>\r\n            </div> );\r\n}\r\n\r\nfunction showModal(book) {\r\n    var modalDiv = document.getElementById(\"myModal\");\r\n    var modalImage = document.getElementById(\"img01\");\r\n    var caption = document.getElementById(\"caption\");\r\n    modalDiv.style.display = \"block\";\r\n    modalImage.src = book.bookInfo.cover;\r\n    caption.innerHTML = book.bookInfo.title;\r\n}\r\n \r\nexport default List","import axios from \"axios\";\r\nexport default {\r\n    //Gets all Campaign names\r\n    login: function (data) {\r\n        return axios.post('/api/auth', data);\r\n    },\r\n    createAccount: function (data) {\r\n        return axios.post('/api/auth/create', data);\r\n    },\r\n    getUser: function(data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/user/getUser', data, {headers: {\r\n            'x-access-token': token\r\n        }})\r\n    },\r\n    updateUser: function(data){\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/user/updateUser', data, {headers: {\r\n            'x-access-token':token\r\n        }})\r\n    },\r\n    updateUserEmail: function(data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/updateUserEmail', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    getShippingAddressesByUser: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/getShippingAddressesByUser', data, {headers: {\r\n            'x-access-token': token\r\n        }});\r\n    },\r\n    addShippingAddress: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/addShippingAddress', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    deleteShippingAddress: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/deleteShippingAddress', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    updateShippingAddress: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/updateShippingAddress', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    removeCreditCard: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/removeCreditCard', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    addCreditCard: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/addCreditCard', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    getCreditCardsByUser: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/getCreditCardsByUser', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    updateCreditCard: function (data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/profilemanagement/updateCreditCard', data, {headers: {\r\n                'x-access-token': token\r\n            }});\r\n    },\r\n    getSearchResults: function(data){\r\n        console.log('Doing post');\r\n        console.log('Data in post ' + data);\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/search/getSearchResults', data, {headers: {\r\n            'x-access-token':token\r\n        }});\r\n    },\r\n    getAllBooks: function(data){\r\n        return axios.post('/api/search/getAllBooks', data);\r\n    },\r\n    add: function(data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/ShoppingCart/add', data, {headers: {\r\n            'x-access-token': token\r\n        }});\r\n    },\r\n    delete: function(data) {\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.post('/api/ShoppingCart/delete', {headers: {\r\n            'x-access-token': token\r\n        }});\r\n    },\r\n    displayAll: function(data) {\r\n        return axios.post('/api/ShoppingCart/displayAll', data);\r\n    },\r\n    componentDidMount: function(data) {\r\n        console.log(\"I reached componentDidMount\");\r\n        let token = localStorage.getItem(\"auth_token\");\r\n        return axios.get('/api/ShoppingCart/displayAll', {headers: {\r\n            'x-access-token': token\r\n        }});\r\n    },\r\n    updateShopCartList: function(data, type) {\r\n        return axios.post('/api/ShoppingCart/update', data, type);\r\n    },\r\n    getList: function(data, type) {\r\n        return axios.post('/api/ShoppingCart/list', data, type);\r\n    },\r\n    fileWriteCart: function(data) {\r\n        return axios.post('/api/ShoppingCart/upload_cart', data);\r\n    },\r\n    fileWriteSave: function(data) {\r\n        return axios.post('/api/ShoppingCart/upload_save', data);\r\n    },\r\n};","import React, {Component} from \"react\";\r\nimport List from \"./List\";\r\nimport API from './utils/API';\r\nimport styled from \"styled-components\";\r\nimport axios from 'axios';\r\nimport Pagination from \"react-js-pagination\";\r\nimport linq from \"linq\";\r\n\r\nconst pageSize = 10;\r\n\r\n\r\nconst ListContainer = styled.div`\r\n    width: 60%;\r\n    padding-top: 100px;\r\n    float: right;\r\n`;\r\n\r\nconst NoResultsContainer = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nvar topSellerClicked = false;\r\n\r\nclass BookList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            allBooks: [],\r\n            books: [],\r\n            fi:[],\r\n            onPage: 1,\r\n            order: \"ASC\",\r\n            pageSize:10,\r\n            activePage:1,\r\n            itemsCountPerPage: 1,\r\n            pageRangeDisplayed: 4,\r\n            totalItemsCount: 1,\r\n            sort: \"title\"\r\n        };\r\n        this.retriveResults = this.retriveResults.bind(this);\r\n        this.returnList = this.returnList.bind(this);\r\n        this.showNoResults = this.showNoResults.bind(this);\r\n        this.changeState = this.changeState.bind(this);\r\n        this.ASC = this.ASC.bind(this);\r\n        this.DESC = this.DESC.bind(this);\r\n        this.ASC.handlePageChange = this.handlePageChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.retriveResults(this.props.match.params.term);\r\n        if(this.props.pageSize){\r\n            this.setState({size: this.props.pageSize});\r\n          }\r\n    }\r\n\r\n\r\n    handlePageChange(pageNumber) {\r\n            console.log(`active page is ${pageNumber}`);\r\n        axios.get(\"http://localhost:3000/#/bookList?page=\"+ pageNumber).then.setState({\r\n            books:this.props.books,\r\n            itemsCountPerPage: this.props.itemsCountPerPage,\r\n            totalItemsCount: this.props.totalItemsCount,\r\n            activePage: this.props.activePage\r\n        });    \r\n        \r\n     }\r\n   \r\n\r\n    \r\n    onChangePage = (page) =>{\r\n        console.log(Math.ceil(this.state.books.length/pageSize));\r\n        this.setState({\r\n            onPage: page,\r\n        });\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(nextState);\r\n        console.log(this.state);\r\n        if (this.props.match.params.term === nextProps.match.params.term && this.state.books.length === nextState.books.length && nextState.order === this.state.order)\r\n        {\r\n            \r\n            return false;\r\n        }\r\n        else\r\n        {\r\n            if (!topSellerClicked)\r\n            {\r\n                this.retriveResults(nextProps.match.params.term);\r\n            }\r\n            \r\n            return true;\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n    changeState(response) {\r\n        this.setState({\r\n            books: response\r\n        });\r\n    }\r\n   \r\n\r\n   \r\n   \r\n\r\n    DESC(event){\r\n        console.log(event.target.value);\r\n        this.setState({order: event.target.value});\r\n    }\r\n    \r\n    ASC(event){\r\n        console.log(event.target.value);\r\n        this.setState({order: event.target.value});\r\n    }\r\n\r\n    \r\n\r\n    retriveResults(term) {\r\n        API.getAllBooks(term).then(res => this.state.allBooks = res.data).catch(err => alert(\"Search error - \" + err));\r\n        this.state.books = linq.from(this.state.allBooks).where(x => JSON.stringify(x.title).includes(term)).toArray();\r\n    }\r\n\r\n    // topResults(term) {\r\n    //     topSellerClicked = true;\r\n    //     ServerCall(\"topSearchInfo\", term, this.changeState);\r\n    // }\r\n\r\n    returnList() {\r\n        if (this.state.books.length !== 0 && this.state.books !== \"0 results\")\r\n        {\r\n            var bookList = this.state.books.map(function(book, index){\r\n                return <List bookInfo={book} key={index} bookIndex={index}></List>;\r\n              })\r\n    \r\n            return bookList;\r\n        }\r\n    }\r\n\r\n    showNoResults() {\r\n        if (this.state.books.length === 0)\r\n        {\r\n            return <NoResultsContainer>\r\n                    <p>No titles found (0 hits) - Try these tips:</p>\r\n                    <p>Try a different kind of search:</p>\r\n                    <p>Do a browse search by title, typing just the first few letters of the title.</p>\r\n                    <p>Do a browse search by author, typing just the first few letters of the author's first or last name.</p>\r\n                    <p>Do a browse search by genre, typing just the first few letters of the genre</p>\r\n                </NoResultsContainer>;\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n\r\n            <div>\r\n                {this.showNoResults()}\r\n                <button id= \"searchText\" >TOP BOOKS</button>\r\n                \r\n                <ListContainer>\r\n\r\n                    <Pagination class = \"d-flex justify-content-center\"\r\nactivePage={this.state.activePage}\r\ntotalItemsCount={this.state.totalItemsCount}\r\nitemsCountPerPage={this.state.itemsCountPerPage}\r\ntotalItemsCount={this.state.totalItemsCount}\r\npageRangeDisplayed={this.state.pageRangeDisplayed}\r\nonChange={this.handlePageChange}\r\nitemClass='page-item'\r\nlinkClass= 'page-link'\r\ntotal = {this.state.books.length}\r\n                        /> \r\n                    {this.returnList()}\r\n\r\n                    \r\n                </ListContainer>\r\n                <p>ORDER THE BOOKS</p>\r\n            <select defaultValue = {this.state.order} onChange = {this.ASC}>\r\n            <option value ={\"ASC\"} onClick = {this.ASC} >DESCENDING</option>\r\n            <option value ={\"DESC\"}onClick = {this.DESC} >ASCENDING</option>\r\n            </select>\r\n            \r\n            {/* {this.topResults()} */}\r\n            \r\n            <div id=\"listContainer\">\r\n\r\n            <input onFocus={this.setTextBoxListner} \r\n                    id=\"searchText\"  \r\n                    placeholder=\"Author, Genre, Title \"\r\n                    onChange={this.handleSearch}/>\r\n                \r\n                {/* <button id=\"topSearch\"  onClick = {() => this.topResults(this.props.match.params.term)}>Top Sellers</button> */}\r\n           \r\n            </div>\r\n        \r\n          \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default BookList;","import React, { Component } from 'react';\r\n\r\nclass HomePage extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <h1 font-family=\"Courier New\">Home Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage","import React, { useState } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport { Form, Alert, Button, Container } from \"react-bootstrap\";\r\n\r\nfunction CreateAccountForm() {\r\n    const [error, setError] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function submitHandle(event) {\r\n        event.preventDefault();\r\n        const user = {\r\n            \"firstName\": firstName,\r\n            \"lastName\": lastName,\r\n            \"email\": email,\r\n            \"password\": password,\r\n            \"homeAddress\": \"\",\r\n            \"nickname\": \"\"\r\n        };\r\n        API.createAccount(user)\r\n            .then(res => alert(\"Account Created\"))\r\n            .catch(err => AccountCreationError(err));\r\n\r\n    }\r\n\r\n    function AccountCreationError(err) {\r\n        if(err.response && err.response.status === 409){\r\n            setError(true);\r\n        } else {\r\n            alert(\"Account creation error - \" + err);\r\n        }\r\n    }\r\n\r\n        function passwordChangeHandle(event) {\r\n            setPassword(event.currentTarget.value);\r\n        }\r\n\r\n        function emailChangeHandle(event) {\r\n            setEmail(event.currentTarget.value);\r\n        }\r\n\r\n        function firstNameChangeHandle(event) {\r\n            setFirstName(event.currentTarget.value);\r\n        }\r\n\r\n        function lastNameChangeHandle(event) {\r\n            setLastName(event.currentTarget.value);\r\n        }\r\n\r\n        function dismissHandle() {\r\n            setError(false);\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Container style={{ paddingTop: \"20px\" }}>\r\n                    {error ? <Alert dismissable variant=\"danger\" onClose={dismissHandle}>There exists a user with that email address</Alert> : null}\r\n                    <Form onSubmit={e => submitHandle(e)}>\r\n                        <Form.Group controlId=\"CreateAccountForm.firstName\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control type=\"text\" value={firstName} onChange={firstNameChangeHandle} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"CreateAccountForm.lastName\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control type=\"text\" value={lastName} onChange={lastNameChangeHandle} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"CreateAccountForm.email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"foo@bar.com\" value={email} onChange={emailChangeHandle} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"CreateAccountForm.password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" value={password} onChange={passwordChangeHandle} />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\">Register</Button>\r\n                    </Form>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    \r\n}\r\n\r\nexport default CreateAccountForm;","import React, { useState } from 'react';\r\nimport API from '../../utils/API';\r\n\r\n\r\nfunction EditNickname(props) {\r\n    const [userEmail, setUserEmail] = useState(props.email);\r\n    const [userNickname, setUserNickname] = useState(props.nickname);\r\n\r\n    function updateNickname(event){\r\n        setUserNickname(event.target.value);\r\n    }\r\n\r\n    function submitNicknameUpdate(event){\r\n        event.preventDefault();\r\n        const nicknameUpdate = {primaryKeys: {email: userEmail}, updates: {$set: {\"nickname\": userNickname}}};\r\n        API.updateUser(nicknameUpdate)\r\n        .then(() => props.onNicknameUpdate(nicknameUpdate.updates.$set.nickname))\r\n        .catch(err => alert(err));\r\n    }\r\n \r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <b>Edit Nickname</b>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={submitNicknameUpdate}>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col\">\r\n                                <label htmlFor=\"userNickname\">Nickname:</label>\r\n                                <input id=\"userNickname\" className=\"form-control\" type=\"text\" placeholder=\" \" value={userNickname} onChange={updateNickname}/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"btn btn-primary float-right\" type=\"submit\">Save Changes</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default EditNickname;","import React, { useState } from 'react';\r\nimport API from '../../utils/API';\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Edit ALL (first and second name)\r\nfunction EditALL(props) {\r\n    const [userEmail, setUserEmail] = useState(props.email);\r\n    const [officialUserEmail, setOfficialUserEmail] = useState(props.email);\r\n    const [userFirstName, setUserFirstName] = useState(props.firstName);\r\n    const [userLastName, setUserLastName] = useState(props.lastName);\r\n    const [userHomeAddress, setUserHomeAddress] = useState(props.homeAddress);\r\n\r\n    function updateFirstName(event) {\r\n        setUserFirstName(event.target.value);\r\n    }\r\n\r\n    function updateLastName(event) {\r\n        setUserLastName(event.target.value);\r\n    }\r\n\r\n    function updateHomeAddress(event) {\r\n        setUserHomeAddress(event.target.value);\r\n    }\r\n\r\n    function updateUserEmail(event) {\r\n        setUserEmail(event.target.value);\r\n    }\r\n\r\n    function submitALL(event) {\r\n        event.preventDefault();\r\n        if (userEmail !== officialUserEmail) {\r\n            const newUserEmailUpdate = { primaryKeys: { email: officialUserEmail }, updates: { $set: { \"email\": userEmail } } };\r\n            API.updateUserEmail(newUserEmailUpdate).then(() => {\r\n                setOfficialUserEmail(newUserEmailUpdate.updates.$set.email);\r\n\r\n                const newPersonalInfo = {\r\n                    primaryKeys: { email: newUserEmailUpdate.updates.$set.email },\r\n                    updates: {\r\n                        $set: {\r\n                            \"firstName\": userFirstName,\r\n                            \"lastName\": userLastName,\r\n                            \"email\": userEmail,\r\n                            \"homeAddress\": userHomeAddress\r\n                        }\r\n                    }\r\n                };\r\n\r\n                API.updateUser(newPersonalInfo)\r\n                    .then(() => props.onNewPersonalInfo(\r\n                        newPersonalInfo.updates.$set.firstName,\r\n                        newPersonalInfo.updates.$set.lastName,\r\n                        newPersonalInfo.updates.$set.homeAddress))\r\n                    .catch(err => alert(\"Error updating personal info: \" + err));\r\n            }).catch(err => alert(\"Error updating email: \" + err));\r\n        } else {\r\n            const newPersonalInfo = {\r\n                primaryKeys: { email: officialUserEmail },\r\n                updates: {\r\n                    $set: {\r\n                        \"firstName\": userFirstName,\r\n                        \"lastName\": userLastName,\r\n                        \"homeAddress\": userHomeAddress\r\n                    }\r\n                }\r\n            };\r\n\r\n            API.updateUser(newPersonalInfo)\r\n                .then(() => props.onNewPersonalInfo(\r\n                    newPersonalInfo.updates.$set.firstName,\r\n                    newPersonalInfo.updates.$set.lastName,\r\n                    newPersonalInfo.updates.$set.email,\r\n                    newPersonalInfo.updates.$set.homeAddress))\r\n                .catch(err => alert(err));\r\n        }\r\n    }\r\n\r\n    function alphaCheck(event) {\r\n        let alphaNum = /^[^0-9*|/,#-%.?!\":<>[\\]{}`\\\\()';@^&~+_=$]+$/;\r\n        if (!alphaNum.test(event.key)) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <b>Edit Personal Information</b>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={submitALL}>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"userFirstName\">First Name:</label>\r\n                            <input id=\"userFirstName\" className=\"form-control\" type=\"text\" placeholder=\"\" value={userFirstName} onKeyPress={alphaCheck} onChange={updateFirstName} />\r\n                        </div>\r\n                        <div className=\"form-group col\">\r\n                            <label htmlFor=\"userLastName\">Last Name:</label>\r\n                            <input id=\"userLastName\" className=\"form-control\" type=\"text\" placeholder=\"\" value={userLastName} onKeyPress={alphaCheck} onChange={updateLastName} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"userEmail\">Email:</label>\r\n                        <input id=\"userEmail\" className=\"form-control\" type=\"email\" placeholder=\"\" value={userEmail} onChange={updateUserEmail} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"userAddress\">Address:</label>\r\n                        <input id=\"userAddress\" className=\"form-control\" type=\"text\" placeholder=\" \" value={userHomeAddress} onChange={updateHomeAddress} />\r\n                    </div>\r\n    \r\n    \r\n                    <button className=\"btn btn-primary float-right\" type=\"submit\">Save Changes</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default EditALL;","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button, Container, ListGroup, ButtonGroup, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction ShippingAddressList(props) {\r\n    const [trueAddresses, setTrueAddresses] = useState([]);\r\n    const [addresses, setAddresses] = useState([]);\r\n    const [newAddress, setNewAddress] = useState(\"\");\r\n    const [userEmail] = useState(props.email);\r\n    const [formCheck, setFormCheck] = useState(false);\r\n\r\n    useEffect(() => {\r\n        updateTrueAddresses();\r\n    }, []);\r\n\r\n    useEffect(() => {checkIfEmpty()});\r\n\r\n\r\n\r\n    function checkIfEmpty() {\r\n        if (!newAddress) {\r\n            setFormCheck(false);\r\n        }\r\n        else {\r\n            setFormCheck(true);\r\n        }\r\n    }\r\n\r\n    function updateTrueAddresses() {\r\n        API.getShippingAddressesByUser({ email: userEmail })\r\n            .then(res => {\r\n                setTrueAddresses(res.data);\r\n                setAddresses(res.data);\r\n                console.log(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    function updateAddress(newAddress, index) {\r\n        let newAddresses = addresses;\r\n        newAddresses[index] = { email: userEmail, address: newAddress };\r\n        setAddresses(newAddresses);\r\n    }\r\n\r\n    function deleteHandle(index) {\r\n        API.deleteShippingAddress(addresses[index]).then(res => {\r\n            updateTrueAddresses();\r\n            // window.location.reload();\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    function editHandle(index) {\r\n        const shippingAddressUpdate = {\r\n            primaryKeys: { email: userEmail, address: trueAddresses[index].addresses },\r\n            updates: { $set: { \"address\": addresses[index].address } }\r\n        };\r\n        API.updateShippingAddress(shippingAddressUpdate).then(() => {\r\n            updateTrueAddresses();\r\n            alert(\"Shipping Address updated!\");\r\n        }).catch(err => { console.log(\"Error updating shipping address: \" + err) })\r\n    }\r\n\r\n    function addressChangeHandle(event) {\r\n        setNewAddress(event.currentTarget.value);\r\n    }\r\n\r\n    function addHandle(event) {\r\n        event.preventDefault();\r\n        API.addShippingAddress({ email: userEmail, address: newAddress })\r\n            .then(() => {\r\n                updateTrueAddresses();\r\n                setNewAddress(\"\");\r\n                // window.location.reload();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                {addresses.map((address, index) => (\r\n                    <ListGroup key={index}>\r\n                        <ListGroup.Item key={index}>\r\n                            <input type=\"text\" placeholder={address.address} onChange={(event) => { updateAddress(event.target.value, index) }} />\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Button onClick={() => editHandle(index)}>Save Changes</Button>\r\n                                <Button onClick={() => deleteHandle(index)} variant=\"danger\">Delete</Button>\r\n                            </ButtonGroup>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                ))}\r\n            </Card>\r\n            <Form onSubmit={addHandle}>\r\n                <Form.Group>\r\n                    <Form.Label>Address:</Form.Label>\r\n                    <Form.Control placeholder=\"182 Main St\" value={newAddress} onChange={addressChangeHandle} />\r\n                </Form.Group>\r\n                <Button className=\"float-right\" type=\"submit\" variant=\"primary\" disabled={!formCheck}>Add address</Button>\r\n            </Form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ShippingAddressList;","import React, { useEffect, useState } from 'react';\r\nimport API from '../../utils/API';\r\nimport ShippingAddressList from './ShippingAddressList';\r\nimport { Card, Form, Button } from 'react-bootstrap';\r\n\r\n\r\nconst EditShippingAddresses = (props) => {\r\n    const [email] = useState(props.email);\r\n    \r\n    return (\r\n    <Card>\r\n      <Card.Header>\r\n        <b>Edit Shipping Addresses</b>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <ShippingAddressList email={email}/>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n    \r\n   \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n\r\nexport default EditShippingAddresses;","import React, {useState, useEffect} from \"react\";\r\nimport {Card, Col, Button, ListGroup, ButtonGroup, Form} from \"react-bootstrap\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction CreditCardsList(props) {\r\n    const [userEmail]  = useState(props.email);\r\n    const [trueCreditCards, setTrueCreditCards] = useState([]);\r\n    const [creditCards, setCreditCards] = useState([]);    \r\n    const [creditCardNumber, setCreditCardNumber] = useState(\"\");\r\n    const [CVV, setCVV] = useState(\"\");\r\n    const [expirationMonth, setExpirationMonth] = useState(\"January\");\r\n    const [expirationYear, setExpirationYear] = useState(\"\");\r\n    const [formCheck, setFormCheck] = useState(false);\r\n\r\n    useEffect(() => {\r\n        updateTrueCreditCards();\r\n    }, []);\r\n\r\n    useEffect(() => {checkIfEmpty()});\r\n\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        function checkLength(event) {\r\n            let inString = event.currentTarget.value;\r\n            let inChar = (inString).charCodeAt(inString.length-1);\r\n    \r\n            if (inChar < 48 || inChar > 57) {\r\n                event.currentTarget.value = inString.slice(0, inString.length-1);\r\n            }\r\n    \r\n            if (inString.length > event.currentTarget.maxLength) {\r\n                event.currentTarget.value = inString.slice(0, event.currentTarget.maxLength);\r\n            }\r\n        }\r\n    \r\n        function checkIfEmpty() {\r\n            if (!creditCardNumber || !expirationYear || !CVV) {\r\n                setFormCheck(false);\r\n            }\r\n            else if (creditCardNumber.length < 1 || expirationYear.length < 1 || CVV.length < 1) {\r\n                setFormCheck(false);\r\n            }\r\n            else {\r\n                setFormCheck(true);\r\n            }\r\n        }\r\n\r\n\r\n    function updateTrueCreditCards() {\r\n        API.getCreditCardsByUser({email: userEmail})\r\n            .then(res => {\r\n                setTrueCreditCards(res.data);\r\n                setCreditCards(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    function updateCreditCardNumber(event) {\r\n        setCreditCardNumber(event.target.value);\r\n    }\r\n\r\n    function updateCVV(event) {\r\n        setCVV(event.target.value);\r\n    }\r\n\r\n    function updateExpirationMonth(event) {\r\n        setExpirationMonth(event.target.value);\r\n    }\r\n\r\n    function updateExpirationYear(event) {\r\n        setExpirationYear(event.target.value);\r\n    }\r\n\r\n    function editCreditCardExpMonthHandle(month, index) {\r\n        let newCreditCard = creditCards[index];\r\n        newCreditCard.expirationMonth = month;\r\n\r\n        let newCreditCards = creditCards;\r\n        newCreditCards[index] = newCreditCard;\r\n        setCreditCards(newCreditCards);\r\n    }\r\n\r\n    function editCreditCardExpYearHandle(year, index) {\r\n        let newCreditCard = creditCards[index];\r\n        newCreditCard.expirationYear = year;\r\n\r\n        let newCreditCards = creditCards;\r\n        newCreditCards[index] = newCreditCard;\r\n        setCreditCards(newCreditCards);\r\n    }\r\n\r\n    function editCreditCardCVVHandle(cvv, index) {\r\n        let newCreditCard = creditCards[index];\r\n        newCreditCard.cvv = cvv;\r\n\r\n        let newCreditCards = creditCards;\r\n        newCreditCards[index] = newCreditCard;\r\n        setCreditCards(newCreditCards);\r\n    }\r\n\r\n    function editCreditCardCCNHandle(ccn, index) {\r\n        let newCreditCard = creditCards[index];\r\n        newCreditCard.creditCardNum = ccn;\r\n\r\n        let newCreditCards = creditCards;\r\n        newCreditCards[index] = newCreditCard;\r\n        setCreditCards(newCreditCards);\r\n    }\r\n\r\n    function deleteHandle(index) {\r\n        API.removeCreditCard(trueCreditCards[index]).then(() =>{\r\n            updateTrueCreditCards();\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    function editHandle(index) {\r\n        const creditCardUpdate = {\r\n            primaryKeys: {email: userEmail, creditCardNum: trueCreditCards[index].creditCardNumber},\r\n            updates: {$set: {\"creditCardNum\": creditCards[index].creditCardNum,\r\n                    \"cvv\": creditCards[index].cvv,\r\n                    \"expirationYear\": creditCards[index].expirationYear,\r\n                    \"expirationMonth\": creditCards[index].expirationMonth}}};\r\n        API.updateCreditCard(creditCardUpdate).then(() => {\r\n            updateTrueCreditCards();\r\n            alert(\"Credit Card updated!\");\r\n        }).catch(err => {console.log(\"Error updating credit card: \" + err)})\r\n    }\r\n\r\n    function addHandle(event) {\r\n        event.preventDefault();\r\n        API.addCreditCard({ \r\n            email: userEmail,\r\n            creditCardNum: creditCardNumber,\r\n            expirationMonth: expirationMonth,\r\n            expirationYear: expirationYear,\r\n            cvv: CVV })\r\n            .then(() => {\r\n                updateTrueCreditCards();\r\n                setCreditCardNumber(\"\");\r\n                setCVV(\"\");\r\n                setExpirationMonth(\"\");\r\n                setExpirationYear(\"\");\r\n                // window.location.reload();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                {creditCards.map((creditCard, index) => (\r\n                    <ListGroup key={index}>\r\n                        <ListGroup.Item key={index}>\r\n                        <Form.Group controlId=\"EditProfileComponent.creditCardNumber\">\r\n                                <Form.Label> Credit Card Number</Form.Label>\r\n                                <Form.Control type=\"text\" maxLength=\"16\" onInput={checkLength} placeholder={creditCard.creditCardNum} onChange={(event) => {editCreditCardCCNHandle(event.target.value, index)}}/>\r\n                            </Form.Group>\r\n                            <Form.Label> Expiration Date</Form.Label>\r\n                            <Form.Row controlId=\"EditProfileComponent.expirationDate\">\r\n                                <Form.Group as={Col} md=\"4\">\r\n                                    <Form.Control as=\"select\" placeholder={creditCard.expirationMonth} onChange={(event) => {editCreditCardExpMonthHandle(event.target.value, index)}}>\r\n                                        {months.map((month) => {\r\n                                            return <option>{month}</option>;\r\n                                        })}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} md=\"4\">\r\n                                    <Form.Control type=\"text\" maxLength=\"4\" onInput={checkLength} placeholder={creditCard.expirationYear} onChange={(event) => {editCreditCardExpYearHandle(event.target.value, index)}}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Group controlId=\"EditProfileComponent.CVV\">\r\n                                <Form.Label> Security Code</Form.Label>\r\n                                <Form.Control style={{ width: \"25%\" }} type=\"text\" maxLength=\"3\" onInput={checkLength}  onChange={(event) => {editCreditCardCVVHandle(event.target.value, index)}} placeholder={creditCard.cvv}/>\r\n                            </Form.Group>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Button onClick={() => editHandle(index)}>Save Changes</Button>\r\n                                <Button onClick={() => deleteHandle(index)} variant=\"danger\">Delete</Button>\r\n                            </ButtonGroup>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                ))}\r\n            </Card>\r\n            <Form onSubmit={addHandle}>\r\n            <div className=\"card-header\">\r\n                <b>New Credit Card</b>\r\n            </div>\r\n            <Card>\r\n            <Form.Group controlId=\"EditProfileComponent.creditCardNumber\">\r\n                    <Form.Label> Credit Card Number</Form.Label>\r\n                    <Form.Control type=\"text\" maxLength=\"16\" onInput={checkLength} value={creditCardNumber} onChange={updateCreditCardNumber}/>\r\n                </Form.Group>\r\n                <Form.Label> Expiration Date</Form.Label>\r\n                <Form.Row controlId=\"EditProfileComponent.expirationDate\">\r\n                    <Form.Group as={Col} md=\"4\">\r\n                        <Form.Control as=\"select\" value={expirationMonth} onChange={updateExpirationMonth}>\r\n                            {months.map((month) => {\r\n                                return <option>{month}</option>;\r\n                            })}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md=\"4\">\r\n                        <Form.Control type=\"text\" maxLength=\"4\" onInput={checkLength} value={expirationYear} onChange={updateExpirationYear} placeholder=\"Year\"/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group controlId=\"EditProfileComponent.CVV\">\r\n                    <Form.Label> Security Code</Form.Label>\r\n                    <Form.Control style={{ width: \"25%\" }} type=\"text\" maxLength=\"3\" onInput={checkLength} value={CVV} onChange={updateCVV} placeholder=\"CVV\"/>\r\n                    <Button className=\"float-right\" type=\"submit\" disabled={!formCheck}>Add credit card</Button>\r\n                </Form.Group>\r\n                </Card>\r\n                \r\n            </Form>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default CreditCardsList; ","import React, { useState, useEffect } from 'react';\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\nimport CreditCardsList from \"./CreditCardsList\"\r\n\r\n\r\nfunction EditCreditCards(props) {\r\n    const [userEmail, setUserEmail] = useState(props.email);\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <b>Edit Credit Cards</b>\r\n            </div>\r\n            <CreditCardsList email={userEmail}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditCreditCards;","import React, { useState, useRef, useEffect} from \"react\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { Grid, Col, Spinner} from \"react-bootstrap\";\r\nimport EditNickname from \"./EditNickname\";\r\nimport EditPersonalInfo from \"../profilemanagement/EditPersonalInfo\";\r\nimport EditShippingAddresses from \"./EditShippingAddresses\";\r\nimport EditCreditCards from \"./EditCreditCards\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction EditProfileComponent(props) {\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [email, setEmail] = useState(props.userEmail);\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [homeAddress, setHomeAddress] = useState(\"\");\r\n    const [renderChildren, setRenderChildren] = useState(false);\r\n\r\n    useEffect(() => {\r\n        API.getUser({ email: email }).then(res => {\r\n            setNickname(res.data.nickname);\r\n            setFirstName(res.data.firstName);\r\n            setLastName(res.data.lastName);\r\n            setHomeAddress(res.data.homeAddress);\r\n            setRenderChildren(true);\r\n        })\r\n    }, []);\r\n\r\n\r\n    function setPersonalInfo(newFirstName, newLastName, newEmail, newHomeAddress){\r\n        setFirstName(newFirstName);\r\n        setLastName(newLastName);\r\n        setEmail(newEmail);\r\n        setHomeAddress(newHomeAddress);\r\n    \r\n        alert(\"Personal Information Updated!\")\r\n    }\r\n\r\n    function newNicknameHandle(newNickname){\r\n        setNickname(newNickname);\r\n\r\n        alert(\"Nickname Updated!\");\r\n    }\r\n\r\n\r\n    function getUserDetails(){\r\n        return {\r\n            nickname: nickname,\r\n            email: email,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            homeAddress: homeAddress\r\n        };\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container style={{ paddingTop: \"20px\" }}>\r\n            {renderChildren ?\r\n                    <React.Fragment>\r\n                        <EditNickname nickname={nickname} email={email} onNicknameUpdate={newNicknameHandle} />\r\n                        <EditPersonalInfo firstName={firstName} lastName={lastName} email={email} homeAddress={homeAddress} onNewPersonalInfo={setPersonalInfo} />\r\n                        <EditShippingAddresses email={email} />\r\n                        <EditCreditCards email={email}/>\r\n                    </React.Fragment>\r\n                    : <Spinner animation=\"border\" variant=\"primary\" />}\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EditProfileComponent;","import React, { useState } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport { Form, Alert, Button, Container } from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nfunction LoginForm(props) {\r\n    const [loginFailed, setLoginFailed] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    function loginHandle(event) {\r\n        event.preventDefault();\r\n        const credentials = {\r\n            \"email\": email,\r\n            \"password\": password\r\n        };\r\n        API.login(credentials)\r\n            .then(res => loginResponseHandle(res, credentials.email))\r\n            .catch(err => loginErrorHandle(err));\r\n    }\r\n\r\n    function loginErrorHandle(err) {\r\n        if(err.response && err.response.status === 401) {\r\n            setLoginFailed(true);\r\n        } else {\r\n            alert(\"Login error - \" + err);\r\n        }\r\n    }\r\n\r\n    function loginResponseHandle(response, email) {\r\n        localStorage.setItem(\"auth_token\", response.data);\r\n        API.getUser({email: email})\r\n        .then(res => {\r\n            setRedirect(true);\r\n            props.handleAuth(true);\r\n        })\r\n        .catch(err => alert(\"Login error - \" + err));\r\n    }\r\n\r\n    function passwordChangeHandle(event) {\r\n        setPassword(event.currentTarget.value);\r\n    }\r\n\r\n    function emailChangeHandle(event) {\r\n        setEmail(event.currentTarget.value);\r\n    }\r\n\r\n    function dismissHandle() {\r\n        setLoginFailed(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {redirect? <Redirect to=\"/\"/>: null}\r\n            <Container style={{ paddingTop: \"20px\" }}>\r\n                {loginFailed ? <Alert dismissable variant=\"danger\" onClose={dismissHandle}>Incorrect Email or Password</Alert> : null}\r\n                <Form inline onSubmit={e => loginHandle(e)}>\r\n                    <Form.Group controlId=\"LoginForm.email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"foo@bar.com\" value={email} onChange={emailChangeHandle} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"LoginForm.password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" value={password} onChange={passwordChangeHandle} />\r\n                    </Form.Group>\r\n                    <Button type=\"Submit\">Login</Button>\r\n                </Form>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import decode from 'jwt-decode';\r\nexport default {\r\n    isAuthenticated: function(){\r\n        const token = localStorage.getItem(\"auth_token\");\r\n        if(token){\r\n            return !!token && !this.isTokenExpired(token)\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    },\r\n    isTokenExpired: function(token) {\r\n        try {\r\n            const decoded = decode(token,  {header: true });\r\n            return decoded.exp < Date.now() / 1000;\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n    },\r\n    getProfile: function() {\r\n        // Using jwt-decode npm package to decode the token\r\n        return decode(localStorage.getItem(\"auth_token\"));\r\n    },\r\n} ","import React, { Component, useState, useEffect } from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport LoginForm from \"./profilemanagement/LoginForm\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../utils/AuthService\";\r\nimport API from \"../utils/API\"\r\n\r\nconst NavibarComponent = () => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [authenticated, setAuthenticated] = useState(AuthService.isAuthenticated());\r\n\r\n    function logout(){\r\n        localStorage.removeItem(\"auth_token\");\r\n        setAuthenticated(false);\r\n        setRedirect(true);\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"primary\" expand=\"lg\">\r\n            {redirect? <Redirect to=\"/register/\"/>: null}\r\n            {!authenticated ? <LoginForm handleAuth={setAuthenticated}/> :\r\n            <React.Fragment>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                        Menu\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item as={Link} to=\"/editProfile\">Edit Profile</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item onClick={logout}>Logout</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                       \r\n                        </Dropdown>\r\n                        <b>Hello! {AuthService.getProfile().username}</b>\r\n                        </React.Fragment>}\r\n        </Navbar>\r\n    );\r\n}\r\n        \r\n              \r\n    \r\n\r\n\r\nexport default NavibarComponent;","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../utils/AuthService\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          AuthService.isAuthenticated() ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/register\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  export default PrivateRoute; ","import React, { useState } from \"react\";\r\nimport CreateAccountForm from './components/profilemanagement/CreateAccountForm';\r\nimport EditProfileComponent from \"./components/profilemanagement/EditProfileComponent\";\r\nimport NavibarComponent from \"./components/NavibarComponent\";\r\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport Auth from \"./utils/AuthService\"\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\nfunction Profile() {\r\n\r\n  const[userDetails, setUserDetails] = useState(null);\r\n  \r\n\r\n  function setUserDetailsHandle(user){\r\n    setUserDetails(user);    \r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <NavibarComponent/>\r\n      <Route path=\"/register\" component={CreateAccountForm}/>\r\n      <PrivateRoute path=\"/editProfile\" component={() => <EditProfileComponent userEmail={Auth.getProfile().username}/>}/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react'; //server related\r\nimport { Pagination, PaginationItem, PaginationLink, Media } from 'react-bootstrap'; //pagination library\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nfunction ShopCartPagination()\r\n{\r\n    return (\r\n        <>\r\n          <div className=\"shopcart-pagination\">\r\n          <Pagination aria-label=\"Page navigation\">\r\n      \r\n          <Pagination.First />\r\n          <Pagination.Prev />\r\n          <Pagination.Item>{1}</Pagination.Item>\r\n          <Pagination.Ellipsis />\r\n          <Pagination.Item>{10}</Pagination.Item>\r\n          <Pagination.Item active>{11}</Pagination.Item>\r\n          <Pagination.Item disabled>{12}</Pagination.Item>\r\n          <Pagination.Next disabled />\r\n          <Pagination.Last disabled />\r\n          </Pagination>\r\n          </div>\r\n      </>\r\n      ); \r\n}\r\n\r\nexport default ShopCartPagination;","import React, { Component } from 'react'; //server related\r\nimport { Pagination, PaginationItem, PaginationLink, Media, Button, Form } from 'react-bootstrap'; //pagination library\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport './ShoppingCart.css';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n//import ShopCartList from './components/ShopCartList';\r\nimport ShopCartPagination from './components/ShopCartPagination';\r\nimport axios from 'axios';\r\nimport API from \"./utils/API\";\r\nimport dbData from \"./models/cartData.json\"\r\nimport saveData from \"./models/saveData.json\"\r\n\r\n\r\nclass ShoppingCart extends Component {\r\n  \r\n\r\n  //bind any other function\r\n  // this.componentDidMount = this.componentDidMount.bind(this);\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      name: '',\r\n      description: '',\r\n      bookID: 0,\r\n      currentID: 1,\r\n      qty: [1],\r\n      accumulated: 0.00,\r\n      dbString: '',\r\n      subtotal: [0],\r\n      dbDataString: '',\r\n      saveDataString: '',\r\n      begin: 0,\r\n      qtyMore10: [true]\r\n    };\r\n\r\n    //handles for the input dropdownlist\r\n    this.qty_handleChange = this.qty_handleChange.bind(this);\r\n    this.qty_handleSubmit = this.qty_handleSubmit.bind(this);\r\n\r\n    //handles save + return button input\r\n    this.saveLater_handleSubmit = this.saveLater_handleSubmit.bind(this);\r\n    this.returnShopCart_handleSubmit = this.returnShopCart_handleSubmit.bind(this);\r\n\r\n    //remove button\r\n    this.removeShopCart_ButtonHandle = this.removeShopCart_ButtonHandle.bind(this);\r\n    this.removesSaveLater_ButtonHandle = this.removeSaveLater_ButtonHandle.bind(this);\r\n  }\r\n  \r\n  //DB related task\r\n  dbStateLoadAssign()\r\n  {\r\n    var saveTempString = '';\r\n    var dbTempString = '';\r\n\r\n    //for the mean time since I need to restructure my code for frontend\r\n    dbTempString = JSON.stringify(dbData);\r\n    saveTempString = JSON.stringify(saveData);\r\n\r\n    var obj1 = JSON.parse(dbTempString);\r\n    var obj2 = JSON.parse(saveTempString);\r\n\r\n    //loads info from the database then updates only the state above\r\n\r\n    //axios to later get moongose then yeah... I may need to turn the result and JSON.stringify\r\n\r\n\r\n    //just update the current state after all the retrieval\r\n\r\n    /*\r\n    var temp = JSON.stringify(dbData);\r\n    //data is now on the same format as in the file but as a string\r\n    var obj = JSON.parse(temp);\r\n\r\n    //find a way to copy this object into the state object\r\n    this.setState({dbString: temp}) \r\n    */\r\n  }\r\n\r\n  /* quick example\r\n  API.getAllBooks(term).then(res => this.state.allBooks = res.data).catch(err => alert(\"Search error - \" + err));\r\n      this.state.books = linq.from(this.state.allBooks).where(x => JSON.stringify(x.title).includes(term)).toArray();*/\r\n  \r\n  dbUpdater(JSONstring, CartOrSave)\r\n  {\r\n    var object = JSON.parse(JSONstring);\r\n    var type = CartOrSave;\r\n    //updates the json string in the state given the string parameter\r\n    if(CartOrSave == \"cart\")\r\n    {\r\n      //this.state.dbDataString = JSONstring;\r\n      API.updateShopCartList(object, type).catch(err => alert(\"update API function failed: \" + err));\r\n    }\r\n    else if(CartOrSave == \"save\")\r\n    {\r\n      //yes me being lazy\r\n      //this.state.saveDataString = JSONstring;\r\n      API.updateShopCartList(object, type).catch(err => alert(\"update API function failed: \" + err));\r\n    }\r\n  }\r\n\r\n dbLoader(JSONstring, CartOrSave)\r\n {\r\n  var object = JSONstring;\r\n  var type = CartOrSave;\r\n  //updates the json string in the state given the string parameter\r\n  if(CartOrSave == \"cart\")\r\n  {\r\n    //this.state.dbDataString = JSONstring;\r\n    API.getList(object, type)\r\n    .then(res => this.setState({['dbDataString']: res.data}) )\r\n    .catch(err => alert(\"update API function failed: \" + err));\r\n  }\r\n  else if(CartOrSave == \"save\")\r\n  {\r\n    //yes me being lazy\r\n    //this.state.saveDataString = JSONstring;\r\n    API.getList(object, type)\r\n    .then(res => this.setState({['saveDataString']: res.data}))\r\n    .catch(err => alert(\"update API function failed: \" + err));\r\n  }\r\n }\r\n\r\n\r\n\r\n  //DBinfo functions\r\n  dbInfoJSON()\r\n  {\r\n    /*\r\n      EVERY JSON.stringify will call a special function in here that retrieves the information of the database. DO NOT USE RETURN.\r\n      CREATE A NEW STATE THAT WILL HOLD THE DB STRING. 1 for ShopCart (dbData), 1 for SaveLater (saveData).\r\n      keep the code below but what I have to do is EVERY JSON.stringify(dbData) and (saveData) must be changed ofc do this after I get the json\r\n      string representation of the mongodb ShopCart and SaveLater in here. ALSO... dbString does nothing lol. CAN'T USE STATES... gotta use API\r\n    */\r\n\r\n    //local stuff atm...  SOLVED IT... so yeah need to make some API calls open for everyone and work with some book data and provide the add button in the book code and wishlist...\r\n    \r\n     // this.dbStateLoadAssign();\r\n    \r\n\r\n    var temp = JSON.stringify(dbData);\r\n    //data is now on the same format as in the file but as a string\r\n    var obj = JSON.parse(temp);\r\n\r\n    //find a way to copy this object into the state object\r\n    this.setState({temp});\r\n    //alert(obj.item[0].userEmail);\r\n    \r\n    //cross origin error....\r\n    \r\n    //this.dbLoader(dbData, \"cart\");\r\n    //this.dbLoader(saveData, \"save\");\r\n\r\n  }\r\n\r\n  //Handler functions below\r\n\r\n  qty_more10Confirm(props) {\r\n    return (\r\n    <>\r\n    <br></br>\r\n    <p>qty: {props}</p>\r\n    </>\r\n    )\r\n  }\r\n\r\n  qty_more10Verify(props) {\r\n    const verify = props.isMore;\r\n    if (verify)\r\n    {\r\n      this.qty_more10Confirm()\r\n    }\r\n  }\r\n\r\n  qty_handleChange(obj, itemIndex, event) {\r\n    //this.setState({value: event.option});\r\n    var jsonString = JSON.stringify({qty: Array.from(event.target.selectedOptions, (item) => item.value)}); //this yields {\"qty\":[\"1\"]}\r\n\r\n    //string manipulation to obtain selected value only\r\n    if(jsonString == \"{\\\"qty\\\":[\\\"10+\\\"]}\")\r\n    {\r\n      var text = \"\";\r\n      var isNum = true;\r\n      \r\n      do {\r\n\r\n        if(!(isNum))\r\n        {\r\n          text = \"please insert a number\";\r\n        }\r\n\r\n        var qtyVar = prompt(\"qty to add:\", text);\r\n        isNum = /^\\d+$/.test(qtyVar);\r\n\r\n\r\n      } while (!(isNum))\r\n      \r\n\r\n      \r\n      let qtyMore10 = [ ...this.state.qtyMore10 ]\r\n      let qty = [ ...this.state.qty ];\r\n      qtyMore10[itemIndex] = true;\r\n      qty[itemIndex] = qtyVar;\r\n      this.setState({ qtyMore10 });\r\n      this.setState({ qty });\r\n    }\r\n    else\r\n    {\r\n      var qtyString = jsonString.substring(9, 10);\r\n    \r\n      let qtyMore10 = [ ...this.state.qtyMore10 ]\r\n      let qty = [ ...this.state.qty ];\r\n      qtyMore10[itemIndex] = false;\r\n      qty[itemIndex] = qtyString;\r\n      this.setState({ qtyMore10 });\r\n      this.setState({ qty });\r\n\r\n      var test = JSON.stringify(obj.item[itemIndex]);\r\n    }\r\n    //reads previous state, but it should update later\r\n  }\r\n\r\n  qty_handleSubmit(event) {\r\n    //task to be done, in this case just add multiplier to the current subtotal of the item\r\n    alert('state value is: 5');\r\n    event.preventDefault();\r\n  }\r\n  \r\n  saveLater_handleSubmit(obj, itemIndex, event) {\r\n\r\n    var cartData = JSON.stringify(dbData); \r\n    var saveLater = JSON.stringify(saveData);\r\n    var cartDataID = \"ShopCart\";\r\n    var saveLaterID = \"SaveLater\";\r\n    this.addToDB(obj, itemIndex, saveLater, saveLaterID);\r\n    this.removeFromDB(obj, itemIndex, cartDataID);\r\n    \r\n  }\r\n\r\n  returnShopCart_handleSubmit(obj, itemIndex, event) {\r\n\r\n    var cartData = JSON.stringify(dbData); ; \r\n    var saveLater = JSON.stringify(saveData);\r\n    var cartDataID = \"ShopCart\";\r\n    var saveLaterID = \"SaveLater\";\r\n    this.addToDB(obj, itemIndex, cartData, cartDataID);\r\n    this.removeFromDB(obj, itemIndex, saveLaterID);\r\n\r\n  }\r\n\r\n  removeShopCart_ButtonHandle(obj, itemIndex, event) {\r\n    var cartData = JSON.stringify(dbData); ; \r\n    var saveLater = JSON.stringify(saveData);\r\n    var cartDataID = \"ShopCart\";\r\n    var saveLaterID = \"SaveLater\";\r\n    this.removeFromDB(obj, itemIndex, cartDataID);\r\n\r\n  }\r\n\r\n  removeSaveLater_ButtonHandle(obj, itemIndex, event) {\r\n    var cartData = JSON.stringify(dbData); ; \r\n    var saveLater = JSON.stringify(saveData);\r\n    var cartDataID = \"ShopCart\";\r\n    var saveLaterID = \"SaveLater\";\r\n    this.removeFromDB(obj, itemIndex, saveLaterID);\r\n  }\r\n\r\n  //end of handler functions\r\n\r\n  //DBupdaters\r\n  //1 parameter is the obj of source , 2 parameter is itemIndex of the obj of source, 3 parameter is the dbString destination, 4 parameter is destinationID dbString.\r\n  addToDB(objSrc, itemIndex, destination, destinationID)\r\n  {\r\n    //NOTE: you can write [ ], but you can't search [ ] characters...\r\n    var emptyList = \"{\\\"item\\\":[]}\";\r\n    var initialSetup = \"{\"+ \"\\\"item\\\"\" + \":[\";\r\n    var beginPosDest = destination.search(\":\") + 2;\r\n    var endPosDest = destination.length - 2;\r\n    var closingSetup = \"]}\"\r\n    var tempString = \"\";\r\n    var everyOtherItems = destination.substring(beginPosDest, endPosDest);\r\n    //extract source and object, create a string with only the new item to be added\r\n    var itemToBeAdded = JSON.stringify(objSrc.item[itemIndex]);\r\n    //determine what to do algorithm\r\n    /*\r\n    -1 = no result (beginPos), \"},\" true (endPosSrc), Num = the position\r\n    */\r\n   //it always give false, but this is for no file at all only way in\r\n    if(destination.search(\":\") == -1)\r\n    {\r\n      tempString = initialSetup + itemToBeAdded + \"]}\";\r\n    }\r\n    else if (destination == emptyList) //check for if the list is simply empty (you can't search for \"[\" or \"]\" )\r\n    {\r\n      tempString = initialSetup + itemToBeAdded + \"]}\";\r\n    }\r\n    else if(!(destination.search(\"},\") == -1 ))\r\n    {\r\n      //file is filled but only 1 entry\r\n      //end is ]}, but itemAdded ends },\r\n      tempString = initialSetup + itemToBeAdded + \",\" + everyOtherItems + \"]}\";\r\n\r\n    }\r\n    else\r\n    {\r\n      //file is multiple filled items\r\n      tempString = initialSetup + itemToBeAdded + \",\" + everyOtherItems + \"]}\";\r\n    }\r\n\r\n    //final string is done\r\n\r\n\r\n    var obj = JSON.parse(tempString);\r\n    //write file to destination\r\n    //file location: \"./models/saveData.json\"\r\n    //this code seems to work if you run JavaScript Editor\r\n    if(destinationID == 'ShopCart')\r\n    {\r\n      API.fileWriteCart(obj);\r\n    }\r\n\r\n    if(destinationID == 'SaveLater')\r\n    {\r\n      API.fileWriteSave(obj);\r\n    }\r\n    \r\n  }\r\n\r\n  removeFromDB(objSrc, itemIndex, objID)\r\n  {\r\n    var i = 0;\r\n    var initialSetup = \"{\"+ \"\\\"item\\\"\" + \":[\";\r\n    var closingSetup = \"]}\"\r\n    var everyOtherItems = \"\";\r\n    var check = false\r\n    //extract source and object, create a string with only the new item to be added\r\n    var itemToBeDeleted = JSON.stringify(objSrc.item[itemIndex]);\r\n\r\n    //plan traverse the array, save everything but the itemIndex item, last item closes stuff, can be done later\r\n\r\n    everyOtherItems += initialSetup \r\n\r\n    //checks if last item was the one deleted\r\n    if(itemIndex == objSrc.item.length - 1)\r\n    {\r\n      check = true;\r\n    }\r\n\r\n    for (i = 0; i < objSrc.item.length; i++)\r\n    {\r\n      if(i != itemIndex)\r\n      {\r\n        if(objSrc.item.length == 1) //only one item in the list, actually it never enters\r\n        {\r\n          \r\n          everyOtherItems += \"\";\r\n        }\r\n        else if(check && (i == (objSrc.item.length - 2))) // check was true condition\r\n        {\r\n          everyOtherItems += JSON.stringify(objSrc.item[i]);\r\n        }\r\n        else if (i == objSrc.item.length - 1) //last case\r\n        {\r\n          everyOtherItems += JSON.stringify(objSrc.item[i]);\r\n        }\r\n        else //normal case\r\n        {\r\n          everyOtherItems += JSON.stringify(objSrc.item[i]) + \",\";\r\n        }\r\n\r\n        \r\n      }\r\n      else if (check && (i == itemIndex)) //when last item is about to be removed...\r\n      {\r\n        everyOtherItems += \"\";\r\n      }\r\n\r\n    }\r\n\r\n    everyOtherItems += closingSetup;\r\n\r\n    //JSON type again (apparently string doesn't retain all of its characters)\r\n    var obj = JSON.parse(everyOtherItems);\r\n\r\n    if(objID == 'ShopCart')\r\n    {\r\n       API.fileWriteCart(obj);\r\n    }\r\n    if(objID == 'SaveLater')\r\n    {\r\n       API.fileWriteSave(obj);\r\n    }\r\n\r\n\r\n  }\r\n  //focus on building a button to add cart and setup the post\r\n    componentDidMount() {\r\n      \r\n      //starts the multiple state qty to 1, this is a default value, this is really to avoid NaN from appearing when grabbing the states.\r\n      let qty = [ ...this.state.qty ];\r\n      let subtotal = [ ...this.state.subtotal ];\r\n      let qtyMore10 = [ ...this.state.qtyMore10 ];\r\n      var i = 0;\r\n      for (i = 0; i < 15; i++)\r\n      {\r\n        qty[i] = 1;\r\n        subtotal[i] = 0;\r\n        qtyMore10[i] = false;\r\n      }\r\n      this.setState({ qty });\r\n      this.setState({ subtotal });\r\n      this.setState({ qtyMore10 });\r\n\r\n\r\n      this.dbInfoJSON();\r\n\r\n    }\r\n\r\n    //loop verison / official version\r\n    itemCreator(index) {\r\n\r\n      \r\n      var currentItem = 0;\r\n      currentItem = 0; //some parameter passed to here\r\n      var currentQty = 1;\r\n      var itemIndex = index;\r\n\r\n      var temp = JSON.stringify(dbData);\r\n\r\n      //var temp = this.state.dbDataString;\r\n\r\n      //data is now on the same format as in the file but as a string\r\n      var obj = JSON.parse(temp);\r\n      var arrayLength = obj.item.length;\r\n      //alert(obj.item[0].userEmail);\r\n      \r\n      return (\r\n      <>\r\n            <ListGroup.Item>\r\n              <Media>\r\n                <img\r\n                  width={64}\r\n                  height={64}\r\n                  src={obj.item[itemIndex].bookImageURL} \r\n                />\r\n                <Media.Body>\r\n                  <h2>{obj.item[itemIndex].bookName}</h2>\r\n                  <p>{obj.item[itemIndex].bookDescription}</p>\r\n                  {/*task to load href arguments*/\r\n                    \r\n                  }\r\n                  <br>\r\n                  </br>\r\n                  <Form>\r\n                  <Form.Group controlId=\"quantity-form\" onChange={(e) => this.qty_handleChange(obj, itemIndex, e)}>\r\n                    <Form.Label>Quantity:</Form.Label>\r\n                    <Form.Control as=\"select\" custom>\r\n                      <option>1</option>\r\n                      <option>2</option>\r\n                      <option>3</option>\r\n                      <option>4</option>\r\n                      <option>5</option>\r\n                      <option>6</option>\r\n                      <option>7</option>\r\n                      <option>8</option>\r\n                      <option>9</option>\r\n                      <option>10+</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form>\r\n                  <br>\r\n                  </br>\r\n                  Current quantity:  <tab></tab> \r\n                  {\r\n                  currentQty = this.state.qty[itemIndex] /*obj.item[itemIndex].bookQty this is the goal*/\r\n                  }\r\n\r\n                  {\r\n                  this.itemBalance(obj.item[itemIndex].bookPrice, currentQty)\r\n                  }\r\n                  <br>\r\n                  </br>\r\n                  <Button variant=\"outline-dark\" onClick={(e) => this.saveLater_handleSubmit(obj, itemIndex, e)}><u>save for later</u></Button>\r\n                  <Button variant=\"outline-dark\" onClick={(e) => this.removeShopCart_ButtonHandle(obj, itemIndex, e)}><u>remove from cart</u></Button>\r\n                  </Media.Body>  \r\n                </Media>\r\n              </ListGroup.Item>\r\n      </>\r\n      )\r\n    }\r\n\r\n    //loop verison / official version\r\n    saveItemCreator(index) {\r\n\r\n      \r\n      var currentItem = 0;\r\n      currentItem = 0; //some parameter passed to here\r\n      var currentQty = 1;\r\n      var itemIndex = index;\r\n\r\n      var temp = JSON.stringify(saveData);\r\n\r\n      //var temp = this.state.saveDataString;\r\n\r\n\r\n      //data is now on the same format as in the file but as a string\r\n      var obj = JSON.parse(temp);\r\n      var arrayLength = obj.item.length;\r\n      //alert(obj.item[0].userEmail);\r\n      \r\n      return (\r\n      <>\r\n            <ListGroup.Item>\r\n              <Media>\r\n                <img\r\n                  width={64}\r\n                  height={64}\r\n                  src={obj.item[itemIndex].bookImageURL} \r\n                />\r\n                <Media.Body>\r\n                  <h2>{obj.item[itemIndex].bookName}</h2>\r\n                  <p>{obj.item[itemIndex].bookDescription}</p>\r\n                  {/*task to load href arguments*/\r\n                    \r\n                  }\r\n                  <br>\r\n                  </br>\r\n                  <Button variant=\"outline-dark\" onClick={(e) => this.returnShopCart_handleSubmit(obj, itemIndex, e)}><u>add to shopcart</u></Button>\r\n                  <Button variant=\"outline-dark\" onClick={(e) => this.removeSaveLater_ButtonHandle(obj, itemIndex, e)}><u>remove from save later list</u></Button>\r\n                  </Media.Body>  \r\n                </Media>\r\n              </ListGroup.Item>\r\n      </>\r\n      )\r\n    }\r\n\r\n    ShopCartList() {\r\n    var i = 0;\r\n\r\n    var temp = JSON.stringify(dbData);\r\n\r\n    //var temp = this.state.dbDataString;\r\n\r\n    //data is now on the same format as in the file but as a string\r\n    var obj = JSON.parse(temp);\r\n    var arrayLength = obj.item.length;\r\n    var rows = [];\r\n    \r\n    \r\n    for (i = 0; i < arrayLength; i++)\r\n    {\r\n      //key in here\r\n      rows.push(this.itemCreator(i));\r\n    }\r\n   \r\n      return(\r\n        <>\r\n        <div><h1><p>Shop Cart List</p></h1></div>\r\n        <div>\r\n          <ListGroup>\r\n           {rows}\r\n          </ListGroup>\r\n        </div>\r\n        <br>\r\n        </br>\r\n        <div>\r\n          {this.totalDisplay(obj, arrayLength)}\r\n        </div>\r\n      </>\r\n      );\r\n    }\r\n\r\n    SaveLaterList() {\r\n      var i = 0;\r\n\r\n      var temp = JSON.stringify(saveData);\r\n\r\n      //var temp = this.state.saveDataString;\r\n\r\n      //data is now on the same format as in the file but as a string\r\n      var obj = JSON.parse(temp);\r\n      var arrayLength = obj.item.length;\r\n      var rows = [];\r\n      \r\n      \r\n      for (i = 0; i < arrayLength; i++)\r\n      {\r\n        //key in here\r\n        rows.push(this.saveItemCreator(i));\r\n      }\r\n     \r\n        return(\r\n          <>\r\n          <div><h1><p>Saved for Later</p></h1></div>\r\n          <div>\r\n            <ListGroup>\r\n             {rows}\r\n            </ListGroup>\r\n          </div>\r\n        </>\r\n        );\r\n      }\r\n\r\n    itemBalance(num, qty)\r\n    {\r\n      //assuming this is a string\r\n      var total = num * qty;\r\n      \r\n      return(\r\n        <>\r\n        <p>Subtotal: ${total}</p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    totalDisplay(obj, length)\r\n    {\r\n      var i = 0;\r\n      var accum = 0;\r\n      var bookSubtotal = 0;\r\n      /*\r\n      obj.item[i].bookPrice;\r\n      this.state.qty[i];\r\n      */\r\n      for(i = 0; i < length; i++)\r\n      {\r\n        bookSubtotal = obj.item[i].bookPrice * this.state.qty[i];\r\n        accum += bookSubtotal;\r\n      }\r\n\r\n      return(\r\n        <>\r\n        <p><h2>Total: ${accum}</h2></p>\r\n        </>\r\n      )\r\n    }\r\n\r\n    render()\r\n    {\r\n        \r\n      return (\r\n         \r\n         <React.Fragment>\r\n           {this.ShopCartList()}\r\n           <br>\r\n           </br>\r\n           {this.SaveLaterList()}\r\n          </React.Fragment>\r\n         \r\n      );\r\n    };\r\n      \r\n  } export default ShoppingCart;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Tab extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: {\r\n        activeTab,\r\n        label,\r\n      },\r\n    } = this;\r\n\r\n    let className = 'tab-list-item';\r\n\r\n    if (activeTab === label) {\r\n      className += ' tab-list-active';\r\n    }\r\n\r\n    return (\r\n      <li\r\n        className={className}\r\n        onClick={onClick}\r\n      >\r\n        {label}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;","import React, { useState } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Form, Alert, Button, Container, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, FormGroup, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, ListGroup, ListGroupItem, Badge, UncontrolledCollapse } from \"reactstrap\";\r\n\r\nconst WishList = (props) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle2 = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  const {\r\n    buttonLabel,\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const [unmountOnClose, setUnmountOnClose] = useState(true);\r\n\r\n    const toggle = () => setModal(!modal);\r\n    const changeUnmountOnClose = e => {\r\n        let value = e.target.value;\r\n        setUnmountOnClose(JSON.parse(value));\r\n\r\n  }\r\n\r\n  return(\r\n\r\n    <div className=\"ShoppingListMain\" style = {{paddingLeft: \"100px\", paddingTop: \"100px\"}}>\r\n\r\n    <h1 style ={{marginBottom: \"0px\"}}>Book Wish List</h1>\r\n    <p>Add a book to an existing Wish List or create a new list </p>\r\n        <div className=\"header\">\r\n        <Form inline>\r\n      <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n        <Input type=\"form\" placeholder=\"Enter the name of a book\" />\r\n      </FormGroup>\r\n      <Dropdown isOpen={dropdownOpen} toggle={toggle2} size = \"sm\">\r\n      <DropdownToggle caret>\r\n          Add\r\n      </DropdownToggle>\r\n      <DropdownMenu>\r\n        <DropdownItem header>Your Lists</DropdownItem>\r\n        <DropdownItem divider />\r\n          <DropdownItem>Fiction</DropdownItem>\r\n             <DropdownItem>Horror</DropdownItem>\r\n             <DropdownItem>Self-Help</DropdownItem>\r\n             <DropdownItem>Biography</DropdownItem>\r\n             <DropdownItem divider />\r\n             <DropdownItem onClick = {toggle}>New List</DropdownItem>\r\n           </DropdownMenu>\r\n         </Dropdown>\r\n    </Form>\r\n\r\n\r\n\r\n\r\n\r\n          <a href =\"#\" id = \"toggler\" style = {{paddingLeft: \"5px\", paddingTop: \"10px\"}}>View Lists</a>\r\n        </div>\r\n\r\n        <div>\r\n\r\n            <Modal isOpen={modal} toggle={toggle} className={className} unmountOnClose={unmountOnClose}>\r\n                <ModalHeader toggle={toggle}>Create a new List</ModalHeader>\r\n                <ModalBody>\r\n                    <Input type=\"textform\"/>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={toggle}>Create List</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n                </Modal>\r\n\r\n        </div>\r\n\r\n\r\n        <div>\r\n        <UncontrolledCollapse toggler = \"#toggler\">\r\n          <ListGroup flush style = {{marginRight: \"75%\"}}>\r\n            <ListGroupItem tag = \"a\" href = \"#\" id=\"toggle-fiction\">Fiction<Badge pill style = {{marginLeft: \"2%\"}}>6</Badge></ListGroupItem>\r\n              <UncontrolledCollapse toggler = \"#toggle-fiction\">\r\n\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\", marginTop: \"2%\"}}>Of Mice and Men</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Maximum Ride</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Game of Thrones</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>God is Dead</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Epitomes of Conviction</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"2%\"}}>Hell Buried</p>\r\n\r\n              </UncontrolledCollapse>\r\n            <ListGroupItem tag = \"a\" href = \"#\" id = \"toggle-horror\">Horror<Badge pill style = {{marginLeft: \"2%\"}}>3</Badge></ListGroupItem>\r\n\r\n              <UncontrolledCollapse toggler = \"#toggle-horror\">\r\n\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\", marginTop: \"2%\"}}>The Shining</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Scratches</p>\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"2%\"}}>The Hostile Hospital</p>\r\n\r\n\r\n              </UncontrolledCollapse>\r\n            <ListGroupItem tag = \"a\" href = \"#\" id = \"toggle-SH\">Self-Help<Badge pill style = {{marginLeft: \"2%\"}}>1</Badge></ListGroupItem>\r\n              <UncontrolledCollapse toggler = \"#toggle-SH\">\r\n\r\n                  <p style = {{marginLeft: \"10%\", marginBottom: \"2%\", marginTop: \"2%\"}}>How To Be A Badass</p>\r\n\r\n\r\n\r\n              </UncontrolledCollapse>\r\n            <ListGroupItem tag = \"a\" href = \"#\" id = \"toggle-bio\">Biography<Badge pill style = {{marginLeft: \"2%\"}}>5</Badge></ListGroupItem>\r\n\r\n            <UncontrolledCollapse toggler = \"#toggle-bio\">\r\n\r\n                <p style = {{marginLeft: \"10%\", marginBottom: \"0px\", marginTop: \"2%\"}}>Slash: A Rockstars Guide to Life</p>\r\n                <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Some Book About Oprah</p>\r\n                <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Morgan Freeman Has A Cool Voice: Heres Why</p>\r\n                <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>Obama? Obama.</p>\r\n                <p style = {{marginLeft: \"10%\", marginBottom: \"0px\"}}>A Day In The Life of a Wendy's Employee</p>\r\n\r\n            </UncontrolledCollapse>\r\n\r\n          </ListGroup>\r\n          </UncontrolledCollapse>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n  )\r\n}\r\nexport default WishList;\r\n","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n    faStar\r\n);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\nimport '../fontawesome';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass StarRatingComponent extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.number,\r\n    editing: PropTypes.bool,\r\n    starCount: PropTypes.number,\r\n    starColor: PropTypes.string,\r\n    onStarClick: PropTypes.func,\r\n    onStarHover: PropTypes.func,\r\n    onStarHoverOut: PropTypes.func,\r\n    renderStarIcon: PropTypes.func,\r\n    renderStarIconHalf: PropTypes.func\r\n  };\r\n\r\n  static defaultProps = {\r\n    starCount: 5,\r\n    editing: true,\r\n    starColor: 'yellow',\r\n    emptyStarColor: 'grey'\r\n  };\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      value: props.value\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { value } = nextProps;\r\n\r\n    if (value != null && (value !== this.state.value)) {\r\n      this.setState({ value });\r\n    }\r\n  }\r\n\r\n  onChange(inputValue) {\r\n    const { editing, value } = this.props;\r\n\r\n    if (!editing) {\r\n      return;\r\n    }\r\n\r\n    if (value != null) {\r\n      return;\r\n    }\r\n\r\n    this.setState({value: inputValue});\r\n  }\r\n\r\n  onStarClick(index, value, name, e) {\r\n    e.stopPropagation();\r\n\r\n    const { onStarClick, editing } = this.props;\r\n\r\n    if (!editing) {\r\n      return;\r\n    }\r\n\r\n    onStarClick && onStarClick(index, value, name, e);\r\n  }\r\n\r\n  onStarHover(index, value, name, e) {\r\n    e.stopPropagation();\r\n\r\n    const { onStarHover, editing } = this.props;\r\n\r\n    if (!editing) {\r\n      return;\r\n    }\r\n\r\n    onStarHover && onStarHover(index, value, name, e);\r\n  }\r\n\r\n  onStarHoverOut(index, value, name, e) {\r\n    e.stopPropagation();\r\n\r\n    const { onStarHoverOut, editing } = this.props;\r\n\r\n    if (!editing) {\r\n      return;\r\n    }\r\n\r\n    onStarHoverOut && onStarHoverOut(index, value, name, e);\r\n  }\r\n\r\n  renderStars() {\r\n    const {\r\n      name,\r\n      starCount,\r\n      starColor,\r\n      emptyStarColor,\r\n      editing\r\n    } = this.props;\r\n    const { value } = this.state;\r\n\r\n    const starStyles = (i, value) => ({\r\n      float: 'right',\r\n      cursor: editing ? 'pointer' : 'default',\r\n      color: value >= i ? starColor : emptyStarColor\r\n    });\r\n    const radioStyles = {\r\n      display: 'none',\r\n      position: 'absolute',\r\n      marginLeft: -9999\r\n    };\r\n\r\n    let starNodes = [];\r\n\r\n    for (let i = starCount; i > 0; i--) {\r\n      const id = `${name}_${i}`;\r\n      const starNodeInput = (\r\n        <input\r\n          key={`input_${id}`}\r\n          style={radioStyles}\r\n          className=\"dv-star-rating-input\"\r\n          type=\"radio\"\r\n          name={name}\r\n          id={id}\r\n          value={i}\r\n          checked={value === i}\r\n          onChange={this.onChange.bind(this, i, name)}\r\n        />\r\n      );\r\n      const starNodeLabel = (\r\n        <label\r\n          key={`label_${id}`}\r\n          style={starStyles(i, value)}\r\n          className={'dv-star-rating-star ' + (value >= i ? 'dv-star-rating-full-star' : 'dv-star-rating-empty-star')}\r\n          htmlFor={id}\r\n          onClick={e => this.onStarClick(i, value, name, e)}\r\n          onMouseOver={e => this.onStarHover(i, value, name, e)}\r\n          onMouseLeave={e => this.onStarHoverOut(i, value, name, e)}\r\n        >\r\n          {this.renderIcon(i, value, name, id)}\r\n        </label>\r\n      );\r\n\r\n      starNodes.push(starNodeInput);\r\n      starNodes.push(starNodeLabel);\r\n    }\r\n\r\n    return starNodes.length ? starNodes : null;\r\n  }\r\n\r\n  renderIcon(index, value, name, id) {\r\n    const { renderStarIcon, renderStarIconHalf } = this.props;\r\n\r\n    if (\r\n      typeof renderStarIconHalf === 'function' &&\r\n      Math.ceil(value) === index &&\r\n      value % 1 !== 0\r\n    ) {\r\n      return renderStarIconHalf(index, value, name, id);\r\n    }\r\n\r\n    if (typeof renderStarIcon === 'function') {\r\n      return renderStarIcon(index, value, name, id);\r\n    }\r\n\r\n    return <FontAwesomeIcon key={`icon_${id}`} icon={faStar} size='2x'/>\r\n  }\r\n\r\n  render() {\r\n    const { editing, className } = this.props;\r\n    const classes = cx('dv-star-rating', {\r\n      'dv-star-rating-non-editable': !editing\r\n    }, className);\r\n\r\n    return (\r\n      <div style={{display: 'inline-block', position: 'relative'}} className={classes}>\r\n        {this.renderStars()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StarRatingComponent;","import React from \"react\";\r\n\r\nexport default function Comment(props) {\r\n  const { name, message, time } = props.comment;\r\n\r\n  return (\r\n\r\n      <div className=\"media-body p-2 shadow-sm rounded bg-light border\">\r\n        <small className=\"float-right text-muted\">{time}</small>\r\n        <h6 className=\"mt-0 mb-1 text-muted\">{name}</h6>\r\n        {message}\r\n      </div>\r\n  );\r\n}","\r\nimport React from \"react\";\r\nimport CommentComponent from \"./CommentComponent\";\r\n\r\nexport default function CommentList(props) {\r\n  return (\r\n    <div className=\"commentList\">\r\n      <h5 className=\"text-muted mb-4\">\r\n        <span>{props.comments.length}</span>{\" \"}\r\n        Comment{props.comments.length !== 1 ? \"s\" : \"\"}\r\n      </h5>\r\n\r\n      {props.comments.length === 0 && !props.loading ? (\r\n        <div style={{width: '350px'}} className=\"alert text-center alert-info\">\r\n          Be the first to comment\r\n        </div>\r\n      ) : null}\r\n\r\n      {props.comments.map((comment, index) => (\r\n        <CommentComponent key={index} comment={comment} />\r\n      ))}\r\n    </div>\r\n  );\r\n}","  \r\nimport React, { Component } from \"react\";\r\n\r\nexport default class CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      error: \"\",\r\n\r\n      comment: {\r\n        name: \"\",\r\n        message: \"\"\r\n      }\r\n    };\r\n\r\n    this.handleFieldChange = this.handleFieldChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n\r\n  handleFieldChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      comment: {\r\n        ...this.state.comment,\r\n        [name]: value\r\n      }\r\n    });\r\n  };\r\n\r\n  goAnonymous = event => {\r\n    console.log('Anonymous');\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.comment.name);\r\n    console.log(this.state.comment.message);\r\n\r\n    if (!this.isFormValid()) {\r\n      this.setState({ error: \"All fields are required.\" });\r\n      return;\r\n    }\r\n\r\n    this.setState({ error: \"\", loading: true });\r\n\r\n    let { comment } = this.state;\r\n    fetch(\"http://localhost:3000\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(comment)\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.error) {\r\n          this.setState({ loading: false, error: res.error });\r\n        } else {\r\n          comment.time = res.time;\r\n          this.props.addComment(comment);\r\n\r\n          this.setState({\r\n            loading: false,\r\n            comment: { ...comment, message: \"\" }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: \"Something went wrong while submitting form.\",\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  isFormValid() {\r\n    return this.state.comment.name !== \"\" && this.state.comment.message !== \"\";\r\n  }\r\n\r\n  renderError() {\r\n    return this.state.error ? (\r\n      <div className=\"alert alert-danger\">{this.state.error}</div>\r\n    ) : null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form method=\"post\" onSubmit={this.onSubmit}>\r\n          <div style={{display:'flex'}} className=\"form-group\">\r\n            <input\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.comment.name}\r\n              className=\"form-control\"\r\n              placeholder=\"nickname\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              style={{width:\"200px\"}}\r\n              disabled='true'\r\n            />\r\n            <button type='button' onClick= {this.goAnonymous}>Go Anonymous</button>\r\n          </div>\r\n\r\n          <div style={{ width: '700px'}} className=\"form-group\">\r\n            <textarea\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.comment.message}\r\n              className=\"form-control\"\r\n              placeholder=\"Add Your Review Here\"\r\n              name=\"message\"\r\n              rows=\"3\"\r\n            />\r\n          </div>\r\n\r\n          {this.renderError()}\r\n\r\n          <div className=\"form-group\">\r\n            <button style={{ border:'none'}} disabled={this.state.loading} className=\"btn btn-primary\">\r\n              Submit Review\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React, { useState } from 'react';\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport StarRatingComponent from './components/StarRatingComponent';\r\nimport CommentListComponent from './components/CommentListComponent';\r\nimport CommentFormComponent from './components/CommentFormComponent';\r\n\r\nfunction App() {\r\n\r\n  const[comments, setComments] = useState([]);\r\n  const[loading, setLoading] = useState(false);\r\n\r\n  function addComment(comment) {\r\n    setLoading(false);\r\n    setComments([comment, ...comments]);\r\n  }\r\n\r\n  return (\r\n    <div style={{'marginLeft':'20px'}}>\r\n    <img src=\"https://cdn.pixabay.com/photo/2015/11/04/20/59/milky-way-1023340_1280.jpg\" \r\n    alt=\"Book Cover\" width=\"150px\" height=\"200px\" style={{'borderRadius':'15px', 'marginTop': '20px'}} />\r\n    <h1>Review [Book Title]</h1> \r\n    <h2>Rating</h2>\r\n    <StarRatingComponent/>\r\n            <CommentFormComponent addComment={addComment} />\r\n            <CommentListComponent loading={loading} comments={comments}/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport Header from './Header'\r\nimport {Route, HashRouter} from \"react-router-dom\";\r\nimport SearchArea from './SearchArea';\r\nimport BookList from './BookList';\r\nimport HomePage from './HomePage';\r\nimport Profile from './Profile';\r\nimport ShoppingCart from './ShoppingCart';\r\nimport Tab from './Tab';\r\nimport Wishlist from './components/WishList';\r\nimport Reviews from './Reviews';\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <div>\r\n                    <Header></Header>\r\n                        <div id=\"route-container\">\r\n                            <Route path=\"/Search\" component={SearchArea}/>\r\n                            <Route path=\"/bookList/:term\" component={BookList}/>\r\n                            <Route path=\"/HomePage\" component={HomePage}/>\r\n                            <Route path=\"/Profile\" component={Profile}/>\r\n                            <Route path=\"/ShoppingCart\" component={ShoppingCart}/>\r\n                            <Route path=\"/BookDetails\" component={Tab}/>\r\n                            <Route path=\"/Wishlist\" component={Wishlist}/>\r\n                            <Route path=\"/Reviews\" component={Reviews}/>\r\n                        </div>\r\n                </div>\r\n            </HashRouter>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}